<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-24T18:26:11 EET" name="Default suite" finished-at="2020-05-24T18:26:54 EET" duration-ms="42832">
    <groups>
    </groups>
    <test started-at="2020-05-24T18:26:11 EET" name="Default test" finished-at="2020-05-24T18:26:54 EET" duration-ms="42832">
      <class name="test.CreateAccountTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:11 EET" name="startDriver" finished-at="2020-05-24T18:26:25 EET" duration-ms="14114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:25 EET" name="beforeClass" finished-at="2020-05-24T18:26:25 EET" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:27 EET" name="verifyRegisteration_usingInvalidEmailFormat_fails" description="TC1 - Verify using invalid email format won&#039;t navigate to &#039;Create Account&#039; page" data-provider="dataOfTC1" finished-at="2020-05-24T18:26:30 EET" duration-ms="3111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invalid email address.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_usingInvalidEmailFormat_fails -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:30 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:30 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_usingInvalidEmailFormat_fails status=SUCCESS method=CreateAccountTest.verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:30 EET" name="verifyRegisteration_usingInvalidEmailFormat_fails" description="TC1 - Verify using invalid email format won&#039;t navigate to &#039;Create Account&#039; page" data-provider="dataOfTC1" finished-at="2020-05-24T18:26:33 EET" duration-ms="3152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invalid email address.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_usingInvalidEmailFormat_fails -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:33 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:33 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_usingInvalidEmailFormat_fails status=SUCCESS method=CreateAccountTest.verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:33 EET" name="verifyRegisteration_usingInvalidEmailFormat_fails" description="TC1 - Verify using invalid email format won&#039;t navigate to &#039;Create Account&#039; page" data-provider="dataOfTC1" finished-at="2020-05-24T18:26:37 EET" duration-ms="3740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@gmail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invalid email address.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_usingInvalidEmailFormat_fails -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:37 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:37 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_usingInvalidEmailFormat_fails status=SUCCESS method=CreateAccountTest.verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:37 EET" name="verifyRegisteration_usingInvalidEmailFormat_fails" description="TC1 - Verify using invalid email format won&#039;t navigate to &#039;Create Account&#039; page" data-provider="dataOfTC1" finished-at="2020-05-24T18:26:39 EET" duration-ms="2185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@gmail.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invalid email address.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_usingInvalidEmailFormat_fails -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:39 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:39 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_usingInvalidEmailFormat_fails status=SUCCESS method=CreateAccountTest.verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:39 EET" name="verifyRegisteration_usingInvalidEmailFormat_fails" description="TC1 - Verify using invalid email format won&#039;t navigate to &#039;Create Account&#039; page" data-provider="dataOfTC1" finished-at="2020-05-24T18:26:41 EET" duration-ms="2077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Invalid email address.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_usingInvalidEmailFormat_fails -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:41 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:41 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_usingInvalidEmailFormat_fails status=SUCCESS method=CreateAccountTest.verifyRegisteration_usingInvalidEmailFormat_fails(java.lang.String, java.lang.String)[pri:1, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="verifyRegisteration_usingValidEmail_naviagtesToRegisterationPage(java.lang.String)[pri:2, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:41 EET" name="verifyRegisteration_usingValidEmail_naviagtesToRegisterationPage" description="TC2 - Verify using valid email navigates to &#039;Create Account&#039; page" data-provider="dataOfTC2" finished-at="2020-05-24T18:26:46 EET" duration-ms="4267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[#account-creation]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_usingValidEmail_naviagtesToRegisterationPage -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:46 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:46 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_usingValidEmail_naviagtesToRegisterationPage status=SUCCESS method=CreateAccountTest.verifyRegisteration_usingValidEmail_naviagtesToRegisterationPage(java.lang.String)[pri:2, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method signature="verifyRegisteration_isSuccessful(java.lang.String)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:46 EET" name="verifyRegisteration_isSuccessful" description="TC3 - Verify Registeration is successful when using valid data" data-provider="dataOfTC3" finished-at="2020-05-24T18:26:53 EET" depends-on-methods="test.CreateAccountTest.verifyRegisteration_usingValidEmail_naviagtesToRegisterationPage" duration-ms="6875" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Welcome to your account. Here you can manage all of your personal information and orders]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Welcome to your account. Here you can manage all of your personal information and orders] but found [Welcome to your account. Here you can manage all of your personal information and orders.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Welcome to your account. Here you can manage all of your personal information and orders] but found [Welcome to your account. Here you can manage all of your personal information and orders.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at test.CreateAccountTest.verifyRegisteration_isSuccessful(CreateAccountTest.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteration_isSuccessful -->
        <test-method is-config="true" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:53 EET" name="screenshotOnFailure" finished-at="2020-05-24T18:26:53 EET" duration-ms="393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisteration_isSuccessful status=FAILURE method=CreateAccountTest.verifyRegisteration_isSuccessful(java.lang.String)[pri:0, instance:test.CreateAccountTest@15043a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:test.CreateAccountTest@15043a2f]" started-at="2020-05-24T18:26:53 EET" name="stopDriver" finished-at="2020-05-24T18:26:54 EET" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- test.CreateAccountTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
